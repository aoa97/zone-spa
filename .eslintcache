[{"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\index.js":"1","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\App.js":"2","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reportWebVitals.js":"3","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\RegisterModal.js":"4","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\utils\\firebase.utils.js":"5","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\store.js":"6","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reducers\\userReducers.js":"7","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\actions\\userActions.js":"8","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\LandingPage.js":"9","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\HomePage.js":"10","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\constants\\userConstants.js":"11","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\AppContainer.js":"12","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\VerifyMessage.js":"13","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\ProfilePage.js":"14","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\UpdateEmailModal.js":"15","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reducers\\postReducers.js":"16","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\actions\\postActions.js":"17","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\ViewImage.js":"18","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\Post.js":"19","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\index.js":"20","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\NewPost.js":"21","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\CreatePostModal.js":"22","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\PostComments.js":"23","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\constants\\postConstants.js":"24","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\PostPlaceholder.js":"25","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\CreateCommunityModal.js":"26","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\index.js":"27","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\constants\\comConstants.js":"28","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\actions\\comActions.js":"29","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reducers\\comReducers.js":"30","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\NoPostMessage.js":"31","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\Navbar.js":"32","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\svg\\Logo.js":"33","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\IconButton.js":"34","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\svg\\icons\\Bell.js":"35","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\EditProfileModal.js":"36","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\CommunityPage.js":"37"},{"size":702,"mtime":1609262302225,"results":"38","hashOfConfig":"39"},{"size":1267,"mtime":1609806440101,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1609175189904,"results":"41","hashOfConfig":"39"},{"size":2295,"mtime":1609289002466,"results":"42","hashOfConfig":"39"},{"size":1858,"mtime":1609616617083,"results":"43","hashOfConfig":"39"},{"size":1116,"mtime":1609815198969,"results":"44","hashOfConfig":"39"},{"size":2683,"mtime":1609621369369,"results":"45","hashOfConfig":"39"},{"size":4797,"mtime":1609790563356,"results":"46","hashOfConfig":"39"},{"size":4024,"mtime":1609643010971,"results":"47","hashOfConfig":"39"},{"size":973,"mtime":1609817475463,"results":"48","hashOfConfig":"39"},{"size":1006,"mtime":1609621377916,"results":"49","hashOfConfig":"39"},{"size":5276,"mtime":1609788358648,"results":"50","hashOfConfig":"39"},{"size":2115,"mtime":1609613241520,"results":"51","hashOfConfig":"39"},{"size":5837,"mtime":1609807962090,"results":"52","hashOfConfig":"39"},{"size":1858,"mtime":1609618385712,"results":"53","hashOfConfig":"39"},{"size":1035,"mtime":1609713584112,"results":"54","hashOfConfig":"39"},{"size":3050,"mtime":1609817792152,"results":"55","hashOfConfig":"39"},{"size":411,"mtime":1609641926141,"results":"56","hashOfConfig":"39"},{"size":3229,"mtime":1609815624462,"results":"57","hashOfConfig":"39"},{"size":797,"mtime":1609789236414,"results":"58","hashOfConfig":"39"},{"size":1131,"mtime":1609807005388,"results":"59","hashOfConfig":"39"},{"size":2044,"mtime":1609807431237,"results":"60","hashOfConfig":"39"},{"size":1205,"mtime":1609646374838,"results":"61","hashOfConfig":"39"},{"size":328,"mtime":1609707862033,"results":"62","hashOfConfig":"39"},{"size":708,"mtime":1609720456278,"results":"63","hashOfConfig":"39"},{"size":2183,"mtime":1609725652375,"results":"64","hashOfConfig":"39"},{"size":255,"mtime":1609724057647,"results":"65","hashOfConfig":"39"},{"size":497,"mtime":1609815123724,"results":"66","hashOfConfig":"39"},{"size":1813,"mtime":1609815413962,"results":"67","hashOfConfig":"39"},{"size":1497,"mtime":1609815253721,"results":"68","hashOfConfig":"39"},{"size":421,"mtime":1609732726610,"results":"69","hashOfConfig":"39"},{"size":1053,"mtime":1609788983852,"results":"70","hashOfConfig":"39"},{"size":3173,"mtime":1609804018915,"results":"71","hashOfConfig":"39"},{"size":237,"mtime":1609803758171,"results":"72","hashOfConfig":"39"},{"size":1416,"mtime":1609745996273,"results":"73","hashOfConfig":"39"},{"size":2696,"mtime":1609800652845,"results":"74","hashOfConfig":"39"},{"size":1265,"mtime":1609815526076,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"s5o0x2",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\index.js",[],["159","160"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\App.js",[],["161","162"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reportWebVitals.js",[],["163","164"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\RegisterModal.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\utils\\firebase.utils.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\store.js",["165"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reducers\\userReducers.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\actions\\userActions.js",["166"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\LandingPage.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\HomePage.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\constants\\userConstants.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\AppContainer.js",["167","168"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\VerifyMessage.js",[],["169","170"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\ProfilePage.js",["171","172","173"],"import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Segment, Image, Header, Grid, Button, Icon, Divider, Message, Placeholder, Form, Input } from 'semantic-ui-react';\r\nimport moment from 'moment'\r\n\r\nimport { getUserPosts } from '../actions/postActions';\r\nimport { updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport { AppContainer, NewPost, NoPostMessage, Post, PostPlaceholder, IconButton, EditProfileModal } from '../components';\r\n\r\nconst ProfilePage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    // Selectors\r\n    const { user } = useSelector(state => state.userState)\r\n    const { loading: loadingStatus, success: successStatus } = useSelector(state => state.userUpdate)\r\n    const { loading, posts: postsSnap, error } = useSelector(state => state.postList)\r\n\r\n    const [status, setStatus] = useState(user && user.status)\r\n    const [updateStatus, setUpdateStatus] = useState(false)\r\n    const [editProfile, setEditProfile] = useState(false)\r\n\r\n    const handleUpdateStatus = async () => {\r\n        await dispatch(updateUser({ status }))\r\n        dispatch({ type: USER_UPDATE_RESET })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserPosts(user.id))\r\n\r\n        if (successStatus) {\r\n            setUpdateStatus(false)\r\n        }\r\n    }, [dispatch, successStatus])\r\n\r\n    return (\r\n        <AppContainer active='profile'>\r\n            <EditProfileModal open={editProfile} onClose={() => setEditProfile(false)} />\r\n\r\n            <Grid>\r\n                <Grid.Column computer={4} mobile={16}>\r\n                    <Segment>\r\n                        <Image\r\n                            fluid\r\n                            src={user.avatar}\r\n                        />\r\n\r\n                        <Button\r\n                            fluid\r\n                            style={{ marginTop: 10 }}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                    </Segment>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column computer={12} mobile={16}>\r\n                    <Segment>\r\n                        <Grid>\r\n                            <Grid.Column computer={12} tablet={9} mobile={9}>\r\n                                <Header style={{ marginBottom: 4 }} >{user.displayName}</Header>\r\n\r\n                                {updateStatus ? (\r\n                                    <Form>\r\n                                        <Form.Group style={{ alignItems: 'center' }} >\r\n                                            <Form.Input\r\n                                                value={status}\r\n                                                onChange={e => setStatus(e.target.value)}\r\n                                            />\r\n\r\n                                            <Form.Button\r\n                                                primary\r\n                                                loading={loadingStatus}\r\n                                                onClick={handleUpdateStatus}\r\n                                            >\r\n                                                Save\r\n                                             </Form.Button>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                ) : (\r\n\r\n                                        <IconButton text onClick={() => setUpdateStatus(true)}>\r\n                                            <p className='text-meta'>{status}</p>\r\n                                        </IconButton>\r\n                                    )}\r\n                            </Grid.Column>\r\n\r\n                            <Grid.Column computer={4} tablet={7} mobile={7} >\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                    <Button onClick={() => setEditProfile(true)}>\r\n                                        <Icon name='edit' /> Edit\r\n                                    </Button>\r\n                                </div>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n\r\n                        <Grid>\r\n                            <Grid.Column width={4}>\r\n                                <p className='text-meta'>E-mail:</p>\r\n                            </Grid.Column>\r\n\r\n                            <Grid.Column width={12}>\r\n                                <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n\r\n                        <Grid>\r\n                            <Grid.Column width={4}>\r\n                                <p className='text-meta'>Phone:</p>\r\n                            </Grid.Column>\r\n\r\n                            <Grid.Column width={12}>{user.phone}</Grid.Column>\r\n                        </Grid>\r\n\r\n                        <Grid>\r\n                            <Grid.Column width={4}>\r\n                                <p className='text-meta'>Birthdate:</p>\r\n                            </Grid.Column>\r\n\r\n                            <Grid.Column width={12}>{user.birthdate && moment(user.birthdate.toDate()).format('LL')}</Grid.Column>\r\n                        </Grid>\r\n                    </Segment>\r\n\r\n                    <NewPost />\r\n\r\n                    {loading ? <PostPlaceholder />\r\n                        : error ? <Message negative content={error} />\r\n                            : postsSnap.length === 0 ? <NoPostMessage /> : <>{postsSnap.map(post => <Post post={post.data()} user={user} />)}</>\r\n                    }\r\n                </Grid.Column>\r\n            </Grid>\r\n        </AppContainer>\r\n    );\r\n}\r\nexport default ProfilePage;","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\UpdateEmailModal.js",["174"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Form, Message, Button } from 'semantic-ui-react';\r\n\r\nimport { updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UpdateEmailModal = ({ open, onClose }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, success, error } = useSelector(state => state.userUpdate)\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const onCloseModal = () => {\r\n        onClose()\r\n        setEmail('')\r\n        dispatch({ type: USER_UPDATE_RESET })\r\n    }\r\n\r\n    return (\r\n        <Modal closeIcon centered={false} size='mini' open={open} onClose={onCloseModal}>\r\n            <Modal.Header className='text-center'>Update Your E-mail</Modal.Header>\r\n\r\n            <Modal.Content>\r\n                {!success ? (\r\n                    <Form loading={loading}>\r\n                        <Form.Input\r\n                            required\r\n                            label=\"E-mail address\"\r\n                            placeholder=\"E-mail address\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        {error && (\r\n                            <Message\r\n                                negative\r\n                                content={error}\r\n                            />\r\n                        )}\r\n\r\n                        <Button primary fluid onClick={() => dispatch(updateUser({ email }))}>Submit</Button>\r\n                    </Form>\r\n                ) : <Message positive icon='check circle outline' content=\"Your email has been updated successfully.\" />}\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default UpdateEmailModal;","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reducers\\postReducers.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\actions\\postActions.js",["175"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\ViewImage.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\Post.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\index.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\NewPost.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\CreatePostModal.js",["176"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Modal, Form, Image, Button, Message } from 'semantic-ui-react';\r\n\r\nimport { createPost } from '../../actions/postActions';\r\n\r\nconst CreatePostModal = ({ open, onClose, com }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    // Selectors\r\n    const { user } = useSelector(state => state.userState)\r\n    const { loading, success, error } = useSelector(state => state.postCreate)\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const handleCreatePost = () => {\r\n        dispatch(createPost({ text }, com))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            onClose()\r\n            setText('')\r\n        }\r\n    }, [success])\r\n\r\n    const fname = user.displayName ? user.displayName.split(' ')[0] : \"\"\r\n    return (\r\n        <Modal closeIcon centered={false} size='tiny' open={open} onClose={onClose}>\r\n            <Modal.Header className='text-center'>Create Post</Modal.Header>\r\n\r\n            <Modal.Content>\r\n                <Image\r\n                    centered\r\n                    avatar\r\n                    size='tiny'\r\n                    src={user.avatar}\r\n                    style={{ marginBottom: 6 }}\r\n                />\r\n\r\n                <Form>\r\n                    <Form.TextArea\r\n                        placeholder={`What's on your mind, ${fname}?`}\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                    />\r\n\r\n                    <Button\r\n                        fluid\r\n                        primary\r\n                        loading={loading}\r\n                        disabled={text.length === 0}\r\n                        onClick={handleCreatePost}\r\n                    >\r\n                        Post\r\n                    </Button>\r\n\r\n                    {error && <Message negative content={error} />}\r\n                </Form>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default CreatePostModal;","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\PostComments.js",["177","178"],"import React from 'react'\r\nimport { Button, Comment, Form, Grid, Header, Input } from 'semantic-ui-react'\r\n\r\n\r\nconst arr = [...Array(3).keys()]\r\n\r\nconst PostComments = () => (\r\n    <>\r\n        <Comment.Group collapsed={false}>\r\n            {arr.map(x => (\r\n                <Comment key={x}>\r\n                    <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\r\n\r\n                    <Comment.Content>\r\n                        <Comment.Author as='a'>Matt</Comment.Author>\r\n\r\n                        <Comment.Metadata>\r\n                            <span>Today at 5:42PM</span>\r\n                        </Comment.Metadata>\r\n\r\n                        <Comment.Text>How artistic!</Comment.Text>\r\n                    </Comment.Content>\r\n                </Comment>\r\n            ))}\r\n        </Comment.Group>\r\n\r\n        <Grid>\r\n            <Grid.Column computer={14} tablet={14} mobile={12}>\r\n                <Input fluid placeholder=\"Leave a comment...\" />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column computer={2} tablet={2} mobile={4}>\r\n                <Button icon='send' />\r\n            </Grid.Column>\r\n        </Grid>\r\n    </>\r\n)\r\n\r\nexport default PostComments","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\constants\\postConstants.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\PostPlaceholder.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\CreateCommunityModal.js",["179"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\index.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\constants\\comConstants.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\actions\\comActions.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\reducers\\comReducers.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\post\\NoPostMessage.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\Navbar.js",["180","181","182","183","184"],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\svg\\Logo.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\IconButton.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\svg\\icons\\Bell.js",[],"C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\components\\EditProfileModal.js",["185"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Form, Message, Button } from 'semantic-ui-react';\r\n\r\nimport { updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst EditProfileModal = ({ open, onClose }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state.userState)\r\n    const { loading, success, error } = useSelector(state => state.userUpdate)\r\n\r\n    const [email, setEmail] = useState(user && user.email)\r\n    const [phone, setPhone] = useState(user && user.phone)\r\n    const [birthdate, setBirthdate] = useState(user.birthdate && user.birthdate.toDate().toISOString().substring(0, 10))\r\n\r\n    const onCloseModal = () => {\r\n        onClose()\r\n        dispatch({ type: USER_UPDATE_RESET })\r\n    }\r\n\r\n    return (\r\n        <Modal closeIcon centered={false} size='mini' open={open} onClose={onCloseModal}>\r\n            <Modal.Header className='text-center'>Update Your E-mail</Modal.Header>\r\n\r\n            <Modal.Content>\r\n                {!success ? (\r\n                    <Form loading={loading}>\r\n                        <Form.Input\r\n                            label=\"E-mail address\"\r\n                            placeholder=\"E-mail address\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            label=\"Phone\"\r\n                            placeholder=\"Phone\"\r\n                            value={phone}\r\n                            onChange={e => setPhone(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Input\r\n                            type='date'\r\n                            label=\"Birthdate\"\r\n                            placeholder=\"Birthdate\"\r\n                            value={birthdate}\r\n                            onChange={e => setBirthdate(e.target.value)}\r\n                        />\r\n\r\n                        {error && (\r\n                            <Message\r\n                                negative\r\n                                content={error}\r\n                            />\r\n                        )}\r\n\r\n                        <Button primary fluid onClick={() => dispatch(updateUser({ email, phone, birthdate: new Date(birthdate) }))}>Save</Button>\r\n                    </Form>\r\n                ) : <Message positive icon='check circle outline' content=\"Your profile has been updated successfully.\" />}\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default EditProfileModal;","C:\\Users\\Ahmed\\Desktop\\Zone\\zone-spa\\src\\pages\\CommunityPage.js",["186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"188","replacedBy":"192"},{"ruleId":"190","replacedBy":"193"},{"ruleId":"188","replacedBy":"194"},{"ruleId":"190","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":15,"column":5,"nodeType":"198","messageId":"199","endLine":15,"endColumn":14},{"ruleId":"200","severity":2,"message":"201","line":136,"column":27,"nodeType":"202","messageId":"203","endLine":136,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":1,"column":17,"nodeType":"202","messageId":"206","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"207","line":4,"column":45,"nodeType":"202","messageId":"206","endLine":4,"endColumn":52},{"ruleId":"188","replacedBy":"208"},{"ruleId":"190","replacedBy":"209"},{"ruleId":"204","severity":1,"message":"210","line":3,"column":72,"nodeType":"202","messageId":"206","endLine":3,"endColumn":83},{"ruleId":"204","severity":1,"message":"211","line":3,"column":91,"nodeType":"202","messageId":"206","endLine":3,"endColumn":96},{"ruleId":"212","severity":1,"message":"213","line":34,"column":8,"nodeType":"214","endLine":34,"endColumn":33,"suggestions":"215"},{"ruleId":"204","severity":1,"message":"216","line":1,"column":27,"nodeType":"202","messageId":"206","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"217","line":79,"column":15,"nodeType":"202","messageId":"206","endLine":79,"endColumn":19},{"ruleId":"212","severity":1,"message":"218","line":25,"column":8,"nodeType":"214","endLine":25,"endColumn":17,"suggestions":"219"},{"ruleId":"204","severity":1,"message":"220","line":2,"column":27,"nodeType":"202","messageId":"206","endLine":2,"endColumn":31},{"ruleId":"204","severity":1,"message":"221","line":2,"column":39,"nodeType":"202","messageId":"206","endLine":2,"endColumn":45},{"ruleId":"212","severity":1,"message":"218","line":31,"column":8,"nodeType":"214","endLine":31,"endColumn":17,"suggestions":"222"},{"ruleId":"204","severity":1,"message":"223","line":2,"column":10,"nodeType":"202","messageId":"206","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"224","line":2,"column":27,"nodeType":"202","messageId":"206","endLine":2,"endColumn":35},{"ruleId":"204","severity":1,"message":"225","line":2,"column":37,"nodeType":"202","messageId":"206","endLine":2,"endColumn":42},{"ruleId":"204","severity":1,"message":"226","line":2,"column":44,"nodeType":"202","messageId":"206","endLine":2,"endColumn":51},{"ruleId":"204","severity":1,"message":"227","line":2,"column":60,"nodeType":"202","messageId":"206","endLine":2,"endColumn":66},{"ruleId":"204","severity":1,"message":"216","line":1,"column":27,"nodeType":"202","messageId":"206","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"228","line":14,"column":13,"nodeType":"202","messageId":"206","endLine":14,"endColumn":20},{"ruleId":"204","severity":1,"message":"229","line":14,"column":22,"nodeType":"202","messageId":"206","endLine":14,"endColumn":27},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],["230"],["231"],"no-dupe-keys","Duplicate key 'userLogin'.","ObjectExpression","unexpected","no-undef","'email' is not defined.","Identifier","undef","no-unused-vars","'useState' is defined but never used.","unusedVar","'Sidebar' is defined but never used.",["230"],["231"],"'Placeholder' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'useEffect' is defined but never used.","'coms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["233"],"'Form' is defined but never used.","'Header' is defined but never used.",["234"],"'Menu' is defined but never used.","'Dropdown' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"237","fix":"239"},"Update the dependencies array to be: [dispatch, successStatus, user.id]",{"range":"240","text":"241"},"Update the dependencies array to be: [onClose, success]",{"range":"242","text":"243"},{"range":"244","text":"243"},[1381,1406],"[dispatch, successStatus, user.id]",[747,756],"[onClose, success]",[859,868]]